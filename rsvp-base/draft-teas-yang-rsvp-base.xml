<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-rsvp-16" category="std">

  <front>
    <title abbrev="RSVP YANG Data Model">A YANG Data Model for Resource Reservation Protocol (RSVP)</title>

    <author initials="V.P." surname="Beeram" fullname="Vishnu Pavan Beeram">
      <organization>Juniper Networks</organization>
      <address>
        <email>vbeeram@juniper.net</email>
      </address>
    </author>
    <author initials="T." surname="Saad" fullname="Tarek Saad">
      <organization>Juniper Networks</organization>
      <address>
        <email>tsaad@juniper.net</email>
      </address>
    </author>
    <author initials="R." surname="Gandhi" fullname="Rakesh Gandhi">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <email>rgandhi@cisco.com</email>
      </address>
    </author>
    <author initials="X." surname="Liu" fullname="Xufeng Liu">
      <organization>Volta Networks</organization>
      <address>
        <email>xufeng.liu.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="I." surname="Bryskin" fullname="Igor Bryskin">
      <organization>Individual</organization>
      <address>
        <email>i_bryskin@yahoo.com</email>
      </address>
    </author>

    <date year="2021" month="February" day="19"/>

    
    <workgroup>TEAS Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol. The YANG data model covers the building blocks that may be
augmented by other RSVP extension data models such as RSVP Traffic-Engineering
(RSVP-TE). It is divided into two modules that cover the basic and extended
RSVP features.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>YANG <xref target="RFC6020"/> and <xref target="RFC7950"/> is a data modeling language that was
introduced to define the contents of a conceptual data store that allows
networked devices to be managed using NETCONF <xref target="RFC6241"/>. YANG has proved
relevant beyond its initial confines, as bindings to other interfaces (e.g.
RESTCONF <xref target="RFC8040"/>) and encoding other than XML (e.g. JSON) are being defined.
Furthermore, YANG data models can be used as the basis of implementation for
other interfaces, such as CLI and programmatic APIs.</t>

<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol <xref target="RFC2205"/>. The data model is divided into two modules:
a base and extended RSVP YANG modules. The RSVP base YANG ‘ietf-rsvp’ module covers the
data that is core to the function of the RSVP protocol and MUST be supported by
vendors that support RSVP protocol <xref target="RFC2205"/>.  The RSVP extended ‘ietf-rsvp-extended’
module covers the data that is optional, or provides ability to tune
RSVP protocol base functionality. The support for RSVP extended module
features by vendors is considered optional.</t>

<t>The RSVP YANG model provides the building blocks needed to allow augmentation
by other models that extend the RSVP protocol– such as using RSVP extensions to
signal Label Switched Paths (LSPs) as defined in <xref target="RFC3209"/>.</t>

<t>The YANG module(s) defined in this document are compatible with the Network
Management Datastore Architecture (NMDA) <xref target="RFC7950"/>.</t>

</section>
<section anchor="requirements-language" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>The terminology for describing YANG data models is found in <xref target="RFC7950"/>.</t>

<section anchor="prefixes-in-data-node-names" title="Prefixes in Data Node Names">

<t>In this document, names of data nodes and other data model objects are prefixed
using the standard prefix associated with the corresponding YANG imported
modules, as shown in Table 1.</t>

<texttable>
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>if</c>
      <c>ietf-interfaces</c>
      <c><xref target="RFC8343"/></c>
      <c>rt</c>
      <c>ietf-routing</c>
      <c><xref target="RFC8349"/></c>
      <c>rt-types</c>
      <c>ietf-routing-types</c>
      <c><xref target="RFC8294"/></c>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>key-chain</c>
      <c>ietf-key-chain</c>
      <c><xref target="RFC8177"/></c>
</texttable>

<figure><artwork><![CDATA[
          Table 1: Prefixes and corresponding YANG modules
]]></artwork></figure>

</section>
<section anchor="model-tree-diagram" title="Model Tree Diagram">

<t>A full tree diagram of the module(s) defined in this document is given in
subsequent sections  as per the syntax defined in <xref target="RFC8340"/>.</t>

</section>
</section>
<section anchor="model-overview" title="Model Overview">

<t>The RSVP YANG module augments the “control-plane-protocol” entry from the
‘ietf-routing’ module defined in <xref target="RFC8349"/>. It also defines the identity
“rsvp” of base type “rt:routing-protocol” to identify the RSVP routing protocol.</t>

<t>The ‘ietf-rsvp’ model defines a single instance of the RSVP protocol.  The top
‘rsvp’ container encompases data for one such RSVP protocol instance.  Multiple
instances can be defined as multiple control-plane protocols instances as
described in <xref target="RFC8349"/>.</t>

<t>The YANG data model defined has the common building blocks for the operation of
the base RSVP protocol for the session type defined in <xref target="RFC2205"/>. The
augmentation of this model by other models (e.g. to support RSVP Traffic
Engineering (TE) extensions for signaling Label Switched Paths (LSPs)) are
outside the scope of this document and are discussed in separate document(s).</t>

<section anchor="modules-relationship" title="Module(s) Relationship">

<t>This RSVP YANG data model defined in this document is divided into two modules: a base and extended
modules. The RSVP data covered in ‘ietf-rsvp’ module are categorized as core to
the function of the protocol and MUST be supported by vendors claiming the support for RSVP
protocol <xref target="RFC2205"/>.</t>

<t>The RSVP extended features that are covered in ‘ietf-rsvp-extended’ module are
categorized as either optional or providing ability to better tune the basic
functionality of the RSVP protocol. The support for RSVP extended features by
all vendors is considered optional.</t>

<t>The relationship between the base and RSVP extended YANG modules and the IETF
routing YANG model is shown in <xref target="figctrl"/>.</t>

<figure title="Relationship of RSVP and RSVP extended modules with other
protocol modules" anchor="figctrl"><artwork><![CDATA[
                +--------------+
       Routing  | ietf-routing |
                +--------------+
                      ^
                      |
                 +-----------+ 
  RSVP module    | ietf-rsvp |
                 +-----------+
                      ^
                      |                    ^: augment relationship
  RSVP extended       |
    module       +--------------------+
                 | ietf-rsvp-extended |
                 +--------------------+
]]></artwork></figure>

</section>
<section anchor="CoreFeatures" title="Core Features">

<t>The RSVP data covered in the ‘ietf-rsvp’ YANG module provides the common building
blocks that are required to configure, operate and manage the RSVP protocol
and MUST be supported by vendors that claim the support for base RSVP protocol
defined in <xref target="RFC2205"/>.</t>

<t>In addition, the following standard RSVP core features are modeled under the
‘ietf-rsvp’ module:</t>

<t><list style="symbols">
  <t>Basic operational statistics, including protocol messages, packets and errors.</t>
  <t>Basic RSVP authentication feature as defined in <xref target="RFC2747"/>) using string
based authentication key.</t>
  <t>Basic RSVP Refresh Reduction feature as defined in (<xref target="RFC2961"/>).</t>
  <t>Basic RSVP Hellos feature as defined in (<xref target="RFC3209"/>)</t>
  <t>Basic RSVP Graceful Restart feature as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="OptionalFeatures" title="Optional Features">

<t>Optional features are beyond the basic configuration, and operation of the
RSVP protocol. The decision whether to support these RSVP features on a
particular device is left to the vendor that supports the RSVP core features.</t>

<t>The following optional features that are covered in the ‘ietf-rsvp-extended’
YANG module:</t>

<t><list style="symbols">
  <t>Advanced operational statistics, including protocol messages, packets and errors.</t>
  <t>Advanced RSVP authentication features as defined in <xref target="RFC2747"/>) using various
authentication key types including those defined in <xref target="RFC8177"/>.</t>
  <t>Advanced RSVP Refresh Reduction features defined in (<xref target="RFC2961"/>).</t>
  <t>Advanced RSVP Hellos features as defined in <xref target="RFC3209"/>, and <xref target="rfc4558"/>.</t>
  <t>Advanced RSVP Graceful Restart features as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="data-model-structure" title="Data Model Structure">

<t>The RSVP YANG data model defines the ‘rsvp’ top-level container that contains
the configuration and operational state for the RSVP protocol.
The presence of this container enables the RSVP protocol functionality.</t>

<t>The ‘rsvp’ top-level container also includes data that has router level scope
(i.e. applicable to all objects modeled under rsvp). It also contains
configuration and state data about the following types of RSVP objects:</t>

<t><list style="symbols">
  <t>interfaces</t>
  <t>neighbors</t>
  <t>sessions</t>
</list></t>

<t>The derived state data is contained in “read-only” nodes directly under the
intended object as shown in <xref target="fig-highlevel"/>.</t>

<figure title="RSVP high-level tree model view" anchor="fig-highlevel"><artwork><![CDATA[
module: ietf-rsvp
   +--rw rsvp!
      +--rw <<router-level scope data>>
         .
         .
      +--rw interfaces
            .
            +-- ro <<derived state associated with interfaces>>
         .
         .
      +--rw neighbors
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
         .
      +--rw sessions
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
   rpcs:
      +--x clear-session
      +--x clear-neighbor
      +--x clear-authentication

]]></artwork></figure>

<t>The following</t>

<t>‘router-level’:</t>

<t><list style='empty'>
  <t>The router-level scope configuration and state data are applicable to all
modeled objects under the top-level ‘rsvp’ container, and MAY affect the RSVP
protocol behavior.</t>
</list></t>

<t>‘interfaces’:</t>

<t><list style='empty'>
  <t>The ‘interfaces’ container includes a list of RSVP enabled interfaces. It
also includes RSVP configuration and state data that is applicable to all
interfaces.  An entry in the interfaces list MAY carry its own configuration
or state data. Any data or state under the “interfaces” container level is
equally applicable to all interfaces unless it is explicitly overridden by
configuration or state under a specific interface.</t>
</list></t>

<t>‘neighbors’ :</t>

<t><list style='empty'>
  <t>The ‘neighbors’ container includes a list of RSVP neighbors. An entry in the
RSVP neighbor list MAY carry its own configuration and state relevant to the
specific RSVP neighbor. The RSVP neighbors can be dynamically discovered using
RSVP signaling, or can be explicitly configured.</t>
</list></t>

<t>‘sessions’:</t>

<t><list style='empty'>
  <t>The ‘sessions’ container includes a list RSVP sessions. An entry in the RSVP
session list MAY carry its own configuration and state relevant to a specific
RSVP session. RSVP sessions are usually derived state that are created as
result of signaling. This model defines attributes related to IP RSVP
sessions as defined in <xref target="RFC2205"/>.</t>
</list></t>

<t>The defined YANG data model supports configuration inheritance for neighbors, and
interfaces.  Data nodes defined under the main container (e.g. the container
that encompasses the list of interfaces, or neighbors) are assumed to apply
equally to all elements of the list, unless overridden explicitly for a certain
element (e.g. interface).</t>

</section>
<section anchor="model-notifications" title="Model Notifications">

<t>Modeling notifications data is key in any defined YANG data model. <xref target="RFC8639"/> and
<xref target="RFC8641"/> define a subscription and push mechanism for YANG datastores. This
mechanism currently allows the user to:</t>

<t><list style="symbols">
  <t>Subscribe notifications on a per client basis</t>
  <t>Specify subtree filters <xref target="RFC6241"/> or XPath filters <xref target="RFC8639"/> so that only interested
contents will be sent.</t>
  <t>Specify either periodic or on-demand notifications.</t>
</list></t>

</section>
</section>
<section anchor="rsvp-base-yang-model" title="RSVP Base YANG Model">

<t>The RSVP base module includes the core features and building blocks for modeling the RSVP
protocol as described in <xref target="CoreFeatures"/>.</t>

<section anchor="tree-diagram" title="Tree Diagram">

<t><xref target="fig-rsvp-tree"/> shows the YANG tree representation for configuration, state
data and RPCs that are covered in ‘ietf-rsvp’ YANG module:</t>

<figure title="RSVP model tree diagram" anchor="fig-rsvp-tree"><artwork><![CDATA[
module: ietf-rsvp
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol:
    +--rw rsvp!
       +--rw globals
       |  +--rw sessions
       |  |  +--ro session-ip*
       |  |          [destination protocol-id destination-port]
       |  |     +--ro destination-port    inet:port-number
       |  |     +--ro protocol-id         uint8
       |  |     +--ro source?             inet:ip-address
       |  |     +--ro destination         inet:ip-address
       |  |     +--ro session-name?       string
       |  |     +--ro session-status?     enumeration
       |  |     +--ro session-type?       identityref
       |  |     +--ro psbs
       |  |     |  +--ro psb* []
       |  |     |     +--ro source-port?   inet:port-number
       |  |     |     +--ro expires-in?    uint32
       |  |     +--ro rsbs
       |  |        +--ro rsb* []
       |  |           +--ro source-port?         inet:port-number
       |  |           +--ro reservation-style?   identityref
       |  |           +--ro expires-in?          uint32
       |  +--ro statistics
       |  |  +--ro messages
       |  |  |  +--ro ack-sent?                       yang:counter64
       |  |  |  +--ro ack-received?                   yang:counter64
       |  |  |  +--ro bundle-sent?                    yang:counter64
       |  |  |  +--ro bundle-received?                yang:counter64
       |  |  |  +--ro hello-sent?                     yang:counter64
       |  |  |  +--ro hello-received?                 yang:counter64
       |  |  |  +--ro integrity-challenge-sent?       yang:counter64
       |  |  |  +--ro integrity-challenge-received?   yang:counter64
       |  |  |  +--ro integrity-response-sent?        yang:counter64
       |  |  |  +--ro integrity-response-received?    yang:counter64
       |  |  |  +--ro notify-sent?                    yang:counter64
       |  |  |  +--ro notify-received?                yang:counter64
       |  |  |  +--ro path-sent?                      yang:counter64
       |  |  |  +--ro path-received?                  yang:counter64
       |  |  |  +--ro path-err-sent?                  yang:counter64
       |  |  |  +--ro path-err-received?              yang:counter64
       |  |  |  +--ro path-tear-sent?                 yang:counter64
       |  |  |  +--ro path-tear-received?             yang:counter64
       |  |  |  +--ro resv-sent?                      yang:counter64
       |  |  |  +--ro resv-received?                  yang:counter64
       |  |  |  +--ro resv-confirm-sent?              yang:counter64
       |  |  |  +--ro resv-confirm-received?          yang:counter64
       |  |  |  +--ro resv-err-sent?                  yang:counter64
       |  |  |  +--ro resv-err-received?              yang:counter64
       |  |  |  +--ro resv-tear-sent?                 yang:counter64
       |  |  |  +--ro resv-tear-received?             yang:counter64
       |  |  |  +--ro summary-refresh-sent?           yang:counter64
       |  |  |  +--ro summary-refresh-received?       yang:counter64
       |  |  |  +--ro unknown-messages-received?      yang:counter64
       |  |  +--ro packets
       |  |  |  +--ro sent?       yang:counter64
       |  |  |  +--ro received?   yang:counter64
       |  |  +--ro errors
       |  |     +--ro authenticate?    yang:counter64
       |  |     +--ro checksum?        yang:counter64
       |  |     +--ro packet-length?   yang:counter64
       |  +--rw graceful-restart
       |     +--rw enabled?   boolean
       +--rw interfaces
       |  +--rw refresh-reduction
       |  |  +--rw enabled?   boolean
       |  +--rw hellos
       |  |  +--rw enabled?   boolean
       |  +--rw authentication
       |  |  +--rw enabled?              boolean
       |  |  +--rw authentication-key?   string
       |  |  +--rw crypto-algorithm      identityref
       |  +--ro statistics
       |  |  +--ro messages
       |  |  |  +--ro ack-sent?                       yang:counter64
       |  |  |  +--ro ack-received?                   yang:counter64
       |  |  |  +--ro bundle-sent?                    yang:counter64
       |  |  |  +--ro bundle-received?                yang:counter64
       |  |  |  +--ro hello-sent?                     yang:counter64
       |  |  |  +--ro hello-received?                 yang:counter64
       |  |  |  +--ro integrity-challenge-sent?       yang:counter64
       |  |  |  +--ro integrity-challenge-received?   yang:counter64
       |  |  |  +--ro integrity-response-sent?        yang:counter64
       |  |  |  +--ro integrity-response-received?    yang:counter64
       |  |  |  +--ro notify-sent?                    yang:counter64
       |  |  |  +--ro notify-received?                yang:counter64
       |  |  |  +--ro path-sent?                      yang:counter64
       |  |  |  +--ro path-received?                  yang:counter64
       |  |  |  +--ro path-err-sent?                  yang:counter64
       |  |  |  +--ro path-err-received?              yang:counter64
       |  |  |  +--ro path-tear-sent?                 yang:counter64
       |  |  |  +--ro path-tear-received?             yang:counter64
       |  |  |  +--ro resv-sent?                      yang:counter64
       |  |  |  +--ro resv-received?                  yang:counter64
       |  |  |  +--ro resv-confirm-sent?              yang:counter64
       |  |  |  +--ro resv-confirm-received?          yang:counter64
       |  |  |  +--ro resv-err-sent?                  yang:counter64
       |  |  |  +--ro resv-err-received?              yang:counter64
       |  |  |  +--ro resv-tear-sent?                 yang:counter64
       |  |  |  +--ro resv-tear-received?             yang:counter64
       |  |  |  +--ro summary-refresh-sent?           yang:counter64
       |  |  |  +--ro summary-refresh-received?       yang:counter64
       |  |  |  +--ro unknown-messages-received?      yang:counter64
       |  |  +--ro packets
       |  |  |  +--ro sent?       yang:counter64
       |  |  |  +--ro received?   yang:counter64
       |  |  +--ro errors
       |  |     +--ro authenticate?    yang:counter64
       |  |     +--ro checksum?        yang:counter64
       |  |     +--ro packet-length?   yang:counter64
       |  +--rw interface* [interface]
       |     +--rw interface            if:interface-ref
       |     +--rw refresh-reduction
       |     |  +--rw enabled?   boolean
       |     +--rw hellos
       |     |  +--rw enabled?   boolean
       |     +--rw authentication
       |     |  +--rw enabled?              boolean
       |     |  +--rw authentication-key?   string
       |     |  +--rw crypto-algorithm      identityref
       |     +--ro statistics
       |        +--ro messages
       |        |  +--ro ack-sent?
       |        |  |       yang:counter64
       |        |  +--ro ack-received?
       |        |  |       yang:counter64
       |        |  +--ro bundle-sent?
       |        |  |       yang:counter64
       |        |  +--ro bundle-received?
       |        |  |       yang:counter64
       |        |  +--ro hello-sent?
       |        |  |       yang:counter64
       |        |  +--ro hello-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-received?
       |        |  |       yang:counter64
       |        |  +--ro notify-sent?
       |        |  |       yang:counter64
       |        |  +--ro notify-received?
       |        |  |       yang:counter64
       |        |  +--ro path-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-received?
       |        |  |       yang:counter64
       |        |  +--ro path-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-err-received?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro summary-refresh-sent?
       |        |  |       yang:counter64
       |        |  +--ro summary-refresh-received?
       |        |  |       yang:counter64
       |        |  +--ro unknown-messages-received?
       |        |          yang:counter64
       |        +--ro packets
       |        |  +--ro sent?       yang:counter64
       |        |  +--ro received?   yang:counter64
       |        +--ro errors
       |           +--ro authenticate?    yang:counter64
       |           +--ro checksum?        yang:counter64
       |           +--ro packet-length?   yang:counter64
       +--rw neighbors
          +--rw neighbor* [address]
             +--rw address                      inet:ip-address
             +--rw epoch?                       uint32
             +--rw expiry-time?                 uint32
             +--rw graceful-restart
             |  +--rw enabled?                  boolean
             |  +--rw local-restart-time?       uint32
             |  +--rw local-recovery-time?      uint32
             |  +--rw neighbor-restart-time?    uint32
             |  +--rw neighbor-recovery-time?   uint32
             |  +--rw helper-mode
             |     +--rw enabled?                            boolean
             |     +--rw max-helper-restart-time?            uint32
             |     +--rw max-helper-recovery-time?           uint32
             |     +--rw neighbor-restart-time-remaining?    uint32
             |     +--rw neighbor-recovery-time-remaining?   uint32
             +--rw hello-status?                enumeration
             +--rw interface?                   if:interface-ref
             +--rw neighbor-status?             enumeration
             +--rw refresh-reduction-capable?   boolean
             +--rw restart-count?               yang:counter32
             +--rw restart-time?                yang:date-and-time

  rpcs:
    +---x clear-session
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w session-info
    |              +---w (session-type)
    |                 +--:(rsvp-session-ip)
    |                    +---w destination         leafref
    |                    +---w protocol-id         uint8
    |                    +---w destination-port    inet:ip-address
    +---x clear-neighbor
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w neighbor-address            leafref
    +---x clear-authentication
       +---w input
          +---w routing-protocol-instance-name    leafref
          +---w (filter-type)
             +--:(match-all)
             |  +---w all                         empty
             +--:(match-one-interface)
                +---w interface?                  if:interface-ref
]]></artwork></figure>

</section>
<section anchor="rsvp-yang-mod" title="YANG Module">

<t>The ietf-rsvp module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-interfaces defined in <xref target="RFC8343"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
  <t>ietf-netconf-acm defined in <xref target="RFC8341"/></t>
</list></t>

<t>This module also references the following documents:
<xref target="RFC2205"/>, <xref target="RFC5495"/>, <xref target="RFC3473"/>, <xref target="RFC5063"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, and <xref target="RFC2961"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp@2021-02-07.yang"
module ietf-rsvp {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp";

  /* Replace with IANA when assigned */

  prefix rsvp;

  import ietf-interfaces {
    prefix if;
    reference
      "RFC8343: A YANG Data Model for Interface Management";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }
  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC8341: Network Configuration Access Control Model";
  }
  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2021-02-07 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  identity rsvp {
    base rt:routing-protocol;
    description
      "RSVP protocol";
  }

  identity rsvp-session-type {
    description
      "Base RSVP session type";
  }

  identity rsvp-session-ip {
    base rsvp-session-type;
    description
      "RSVP IP session type";
  }

  identity reservation-style {
    description
      "Base identity for reservation style.";
  }

  identity reservation-wildcard-filter {
    base reservation-style;
    description
      "Wildcard-Filter (WF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-fixed-filter {
    base reservation-style;
    description
      "Fixed-Filter (FF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-shared-explicit {
    base reservation-style;
    description
      "Shared Explicit (SE) Style.";
    reference
      "RFC2205";
  }

  grouping graceful-restart {
    description
      "RSVP graceful restart parameters grouping.";
    container graceful-restart {
      description
        "Graceful restart information.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "'true' if RSVP Graceful Restart is enabled.
           'false' if RSVP Graceful Restart is disabled.";
        reference "RFC5495";
      }
      leaf local-restart-time {
        type uint32;
        units "seconds";
        default "120";
        description
          "Time it takes the local node to restart its RSVP-TE
           component (to the point where it can exchange RSVP
           Hello with its neighbors).";
        reference "RFC3473";
      }
      leaf local-recovery-time {
        type uint32;
        units "seconds";
        default "120";
        description
          "The period of time, in milliseconds, that the local
           node requires to re-synchronize RSVP and MPLS
           forwarding state with its neighbor. A value of zero (0)
           indicates that MPLS forwarding state was not preserved
           across a particular reboot.";
        reference "RFC3473";
      }
      leaf neighbor-restart-time {
        type uint32;
        units "seconds";
        default "120";
        config false;
        description
          "Time it takes the neighbor node to restart its RSVP-TE
           component (to the point where it can exchange RSVP
           Hello with its neighbors).";
        reference "RFC3473";
      }
      leaf neighbor-recovery-time {
        type uint32;
        units "seconds";
        default "120";
        config false;
        description
          "The period of time, in milliseconds, that the neighbor
           node requires to re-synchronize RSVP and MPLS
           forwarding state with its neighbor. A value of zero (0)
           indicates that MPLS forwarding state was not preserved
           across a particular reboot.";
        reference "RFC3473";
      }
      container helper-mode {
        description
          "Helper mode information.";
        leaf enabled {
          type boolean;
          default "true";
          description
            "'true' if helper mode is enabled.";
        }
        leaf max-helper-restart-time {
          type uint32;
          units "seconds";
          default "20";
          description
            "The time the router or switch waits after it discovers
             that a neighboring router has gone down before it
             declares the neighbor down.";
          reference "RFC5063";
        }
        leaf max-helper-recovery-time {
          type uint32;
          units "seconds";
          default "180";
          description
            "The amount of time the router retains the state of its
             RSVP neighbors while they undergo a graceful restart.";
          reference "RFC5063";
        }
        leaf neighbor-restart-time-remaining {
          type uint32;
          units "seconds";
          config false;
          description
            "Number of seconds remaining for neighbor to send Hello
             message after restart.";
          reference "RFC5063";
        }
        leaf neighbor-recovery-time-remaining {
          type uint32;
          units "seconds";
          config false;
          description
            "Number of seconds remaining for neighbor to refresh.";
          reference "RFC5063";
        }
      }
      // helper-mode
    }
  }

  grouping refresh-reduction {
    description
      "Top level grouping for RSVP refresh reduction parameters.";
    container refresh-reduction {
      description
        "Top level container for RSVP refresh reduction parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Refresh Reduction is enabled.
           'false' if RSVP Refresh Reduction is disabled.";
      }
      reference
        "RFC2961 RSVP Refresh Overhead Reduction Extensions";
    }
  }

  grouping authentication {
    description
      "Top level grouping for RSVP authentication parameters.";
    container authentication {
      description
        "Top level container for RSVP authentication parameters.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "'true' if RSVP Authentication is enabled.
           'false' if RSVP Authentication is disabled.";
      }
      leaf authentication-key {
        type string;
        default "";
        description
          "An authentication key string.";
        reference
          "RFC2747: RSVP Cryptographic Authentication";
      }
      leaf crypto-algorithm {
        type identityref {
          base key-chain:crypto-algorithm;
        }
        mandatory true;
        description
          "Cryptographic algorithm associated with key.";
      }
    }
  }

  grouping hellos {
    description
      "Top level grouping for RSVP hellos parameters.";
    container hellos {
      description
        "Top level container for RSVP hello parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Hello is enabled.
           'false' if RSVP Hello is disabled.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
      }
    }
  }

  grouping session-attributes {
    description
      "Top level grouping for RSVP session properties.";
    leaf destination-port {
      type inet:port-number;
      description
        "RSVP destination port.";
      reference
        "RFC2205";
    }
    leaf protocol-id {
      type uint8;
      description
        "The IP protocol ID.";
      reference
        "RFC2205, section 3.2";
    }
    leaf source {
      type inet:ip-address;
      description
        "RSVP source address.";
      reference
        "RFC2205";
    }
    leaf destination {
      type inet:ip-address;
      description
        "RSVP destination address.";
      reference
        "RFC2205";
    }
    leaf session-name {
      type string;
      default "";
      description
        "The signaled name of this RSVP session.";
    }
    leaf session-status {
      type enumeration {
        enum up {
          description
            "RSVP session is up.";
        }
        enum down {
          description
            "RSVP session is down.";
        }
      }
      default "down";
      description
        "Enumeration of RSVP session states.";
    }
    leaf session-type {
      type identityref {
        base rsvp-session-type;
      }
      mandatory "true";
      description
        "RSVP session type.";
    }
    container psbs {
      description
        "Path State Block (PSB) container.";
      list psb {
        description
          "List of Path State Blocks.";
        leaf source-port {
          type inet:port-number;
          description
            "RSVP source port.";
          reference
            "RFC2205";
        }
        leaf expires-in {
          type uint32;
          units "seconds";
          default "180";
          description
            "Time to expiry (in seconds).";
        }
      }
    }
    container rsbs {
      description
        "Reservation State Block (RSB) container.";
      list rsb {
        description
          "List of Reservation State Blocks.";
        leaf source-port {
          type inet:port-number;
          description
            "RSVP source port.";
          reference
            "RFC2205";
        }
        leaf reservation-style {
          type identityref {
            base reservation-style;
          }
          mandatory "true";
          description
            "RSVP reservation style.";
        }
        leaf expires-in {
          type uint32;
          units "seconds";
          default "180";
          description
            "Time to expiry (in seconds).";
        }
      }
    }
  }

  grouping neighbor-attributes {
    description
      "Top level grouping for RSVP neighbor properties.";
    leaf address {
      type inet:ip-address;
      description
        "Address of the RSVP neighbor.";
    }
    leaf epoch {
      type uint32;
      default "0";
      description
        "Neighbor epoch.";
      reference "RFC5063";
    }
    leaf expiry-time {
      type uint32;
      units "seconds";
      default "180";
      description
        "Neighbor expiry time after which the neighbor state is
         purged if no states associated with it.";
    }
    uses graceful-restart;
    leaf hello-status {
      type enumeration {
        enum enabled {
          description
            "RSVP Hellos enabled.";
        }
        enum disabled {
          description
            "RSVP Hellos disabled.";
        }
        enum restarting {
          description
            "RSVP restarting.";
        }
      }
      config false;
      description
        "RSVP Hello status.";
    }
    leaf interface {
      type if:interface-ref;
      description
        "Interface where RSVP neighbor was detected.";
    }
    leaf neighbor-status {
      type enumeration {
        enum up {
          description
            "Neighbor state up.";
        }
        enum down {
          description
            "Neighbor state down.";
        }
        enum hello-disable {
          description
            "RSVP Hellos disabled.";
        }
        enum restarting {
          description
            "RSVP neighbor restarting.";
        }
      }
      config false;
      description
        "RSVP neighbor state.";
    }
    leaf refresh-reduction-capable {
      type boolean;
      default "true";
      description
        "Enables all RSVP refresh reduction message bundling, RSVP
         message ID, reliable message delivery and summary refresh.";
      reference
        "RFC2961 RSVP Refresh Overhead Reduction Extensions";
    }
    leaf restart-count {
      type yang:counter32;
      config false;
      description
        "Number of times this RSVP neighbor has restarted.";
    }
    leaf restart-time {
      type yang:date-and-time;
      config false;
      description
        "Last restart time of the RSVP neighbor.";
      reference "RFC3473";
    }
  }

  grouping packet-statistics {
    description
      "Packet statistics grouping.";
    container packets {
      description
        "Packet statistics container.";
      leaf sent {
        type yang:counter64;
        description
          "RSVP packet sent count.";
      }
      leaf received {
        type yang:counter64;
        description
          "RSVP packet received count.";
      }
    }
  }

  grouping message-statistics {
    description
      "RSVP protocol statistics grouping.";
    container messages {
      description
        "RSVP protocol statistics container.";
      leaf ack-sent {
        type yang:counter64;
        description
          "RSVP Hello sent count.";
      }
      leaf ack-received {
        type yang:counter64;
        description
          "RSVP Hello received count.";
      }
      leaf bundle-sent {
        type yang:counter64;
        description
          "RSVP Bundle message sent count.";
      }
      leaf bundle-received {
        type yang:counter64;
        description
          "RSVP Bundle message received count.";
      }
      leaf hello-sent {
        type yang:counter64;
        description
          "RSVP Hello message sent count.";
      }
      leaf hello-received {
        type yang:counter64;
        description
          "RSVP Hello message received count.";
      }
      leaf integrity-challenge-sent {
        type yang:counter64;
        description
          "RSVP Integrity Challenge message sent count.";
      }
      leaf integrity-challenge-received {
        type yang:counter64;
        description
          "RSVP Integrity Challenge message received count.";
      }
      leaf integrity-response-sent {
        type yang:counter64;
        description
          "RSVP Integrity Response message sent count.";
      }
      leaf integrity-response-received {
        type yang:counter64;
        description
          "RSVP Integrity Response message received count.";
      }
      leaf notify-sent {
        type yang:counter64;
        description
          "RSVP Notify message sent count.";
      }
      leaf notify-received {
        type yang:counter64;
        description
          "RSVP Notify message received count.";
      }
      leaf path-sent {
        type yang:counter64;
        description
          "RSVP Path message sent count.";
      }
      leaf path-received {
        type yang:counter64;
        description
          "RSVP Path message received count.";
      }
      leaf path-err-sent {
        type yang:counter64;
        description
          "RSVP Path error message sent count.";
      }
      leaf path-err-received {
        type yang:counter64;
        description
          "RSVP Path error message received count.";
      }
      leaf path-tear-sent {
        type yang:counter64;
        description
          "RSVP Path tear message sent count.";
      }
      leaf path-tear-received {
        type yang:counter64;
        description
          "RSVP Path tear message received count.";
      }
      leaf resv-sent {
        type yang:counter64;
        description
          "RSVP Resv message sent count.";
      }
      leaf resv-received {
        type yang:counter64;
        description
          "RSVP Resv message received count.";
      }
      leaf resv-confirm-sent {
        type yang:counter64;
        description
          "RSVP Confirm message sent count.";
      }
      leaf resv-confirm-received {
        type yang:counter64;
        description
          "RSVP Confirm message received count.";
      }
      leaf resv-err-sent {
        type yang:counter64;
        description
          "RSVP Resv error message sent count.";
      }
      leaf resv-err-received {
        type yang:counter64;
        description
          "RSVP Resv error message received count.";
      }
      leaf resv-tear-sent {
        type yang:counter64;
        description
          "RSVP Resv tear message sent count.";
      }
      leaf resv-tear-received {
        type yang:counter64;
        description
          "RSVP Resv tear message received count.";
      }
      leaf summary-refresh-sent {
        type yang:counter64;
        description
          "RSVP Summary refresh message sent count.";
      }
      leaf summary-refresh-received {
        type yang:counter64;
        description
          "RSVP Summary refresh message received count.";
      }
      leaf unknown-messages-received {
        type yang:counter64;
        description
          "Unknown messages received count.";
      }
    }
  }

  grouping errors-statistics {
    description
      "Error statistics grouping.";
    container errors {
      description
        "Error statistics container.";
      leaf authenticate {
        type yang:counter64;
        description
          "The total number of RSVP packets received with an
           authentication failure.";
      }
      leaf checksum {
        type yang:counter64;
        description
          "The total number of RSVP packets received with an invalid
           checksum value.";
      }
      leaf packet-length {
        type yang:counter64;
        description
          "The total number of packets received with an invalid
           packet length.";
      }
    }
  }

  grouping statistics {
    description
      "RSVP statistic attributes.";
    container statistics {
      config false;
      description
        "RSVP statistics container.";
      uses message-statistics;
      uses packet-statistics;
      uses errors-statistics;
    }
  }

  grouping intf-attributes {
    description
      "Top level grouping for RSVP interface properties.";
    uses refresh-reduction;
    uses hellos;
    uses authentication;
    uses statistics;
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol" {
    when "rt:type = 'rsvp:rsvp'" {
      description
        "This augment is only valid when routing protocol instance
         type is RSVP.";
    }
    description
      "RSVP protocol augmentation.";
    container rsvp {
      presence "Enable RSVP feature";
      description
        "RSVP feature container";
      container interfaces {
        description
          "RSVP interfaces container.";
        uses intf-attributes;
        list interface {
          key "interface";
          description
            "RSVP interfaces.";
          leaf interface {
            type if:interface-ref;
            description
              "RSVP interface.";
          }
          uses intf-attributes;
        }
      }
      container sessions {
        description
          "RSVP sessions container.";
        list session-ip {
          key "destination protocol-id destination-port";
          config false;
          description
            "List of RSVP sessions.";
          uses session-attributes;
        }
      }
      container neighbors {
        description
          "RSVP neighbors container";
        list neighbor {
          key "address";
          description
            "List of RSVP neighbors";
          uses neighbor-attributes;
        }
      }
      uses graceful-restart;
    }
  }

  grouping session-ref {
    description
      "Session reference information";
    leaf destination {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols"
           + "/rt:control-plane-protocol/rsvp:rsvp"
           + "/rsvp:sessions/rsvp:session-ip/destination";
      }
      mandatory true;
      description
        "The RSVP session destination.";
    }
    leaf protocol-id {
      type uint8;
      mandatory true;
      description
        "The RSVP session protocol ID.";
    }
    leaf destination-port {
      type inet:ip-address;
      mandatory true;
      description
        "The RSVP session destination port.";
    }
  }

  rpc clear-session {
    nacm:default-deny-all;
    description
      "Clears RSVP sessions RPC";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP sessions.";
          }
        }
        case match-one {
          container session-info {
            description
              "Specifies the specific session to invoke operation on";
            choice session-type {
              mandatory true;
              description
                "The RSVP session type.";
              case rsvp-session-ip {
                uses session-ref;
              }
            }
          }
        }
      }
    }
  }

  rpc clear-neighbor {
    nacm:default-deny-all;
    description
      "RPC to clear the RSVP Hello session to a neighbor.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "The Filter choice.";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP neighbor sessions.";
          }
        }
        case match-one {
          leaf neighbor-address {
            type leafref {
              path "/rt:routing/rt:control-plane-protocols"
                 + "/rt:control-plane-protocol/rsvp:rsvp"
                 + "/rsvp:neighbors/rsvp:neighbor/address";
            }
            mandatory true;
            description
              "Match the specific RSVP neighbor session.";
          }
        }
      }
    }
  }

  rpc clear-authentication {
    nacm:default-deny-all;
    description
      "Clears the RSVP Security Association (SA) before the
       lifetime expires.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP security associations.";
          }
        }
        case match-one-interface {
          leaf interface {
            type if:interface-ref;
            description
              "Interface where RSVP security association(s) to be
               detected.";
          }
        }
      }
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="rsvp-extended-yang-model" title="RSVP Extended YANG Model">

<t>The RSVP extended module augments the RSVP base module with optional feature data
as described in <xref target="OptionalFeatures"/>.</t>

<section anchor="tree-diagram-1" title="Tree Diagram">

<t><xref target="fig-rsvp-extended"/> shows the YANG tree representation for configuration and
state data that are covered in ‘ietf-rsvp-extended’ YANG module:</t>

<figure title="RSVP extended module tree diagram" anchor="fig-rsvp-extended"><artwork><![CDATA[
module: ietf-rsvp-extended
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:globals
            /rsvp:graceful-restart:
    +--rw restart-time?    uint32
    +--rw recovery-time?   uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:globals
            /rsvp:statistics/rsvp:packets:
    +--ro discontinuity-time?   yang:date-and-time
    +--ro out-dropped?          yang:counter64
    +--ro in-dropped?           yang:counter64
    +--ro out-errors?           yang:counter64
    +--ro in-errors?            yang:counter64
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:globals
            /rsvp:statistics/rsvp:messages:
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:globals
            /rsvp:statistics/rsvp:errors:
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum?                boolean
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw reliable-ack-hold-time?     uint32
    +--rw reliable-ack-max-size?      uint32
    +--rw reliable-retransmit-time?   uint32
    +--rw reliable-srefresh?          empty
    +--rw summary-max-size?           uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum?                boolean
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw reliable-ack-hold-time?     uint32
    +--rw reliable-ack-max-size?      uint32
    +--rw reliable-retransmit-time?   uint32
    +--rw reliable-srefresh?          empty
    +--rw summary-max-size?           uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
]]></artwork></figure>

</section>
<section anchor="yang-module" title="YANG Module">

<t>The ‘ietf-rsvp-extended’ module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-rsvp defined in this document</t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
</list></t>

<t><xref target="fig-rsvp-extended-mod"/> shows the RSVP extended YANG module:</t>

<t>This module also references the following documents:
<xref target="RFC3473"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, <xref target="RFC2205"/>, <xref target="RFC2961"/>, and <xref target="RFC5495"/>.</t>

<figure title="RSVP extended YANG module" anchor="fig-rsvp-extended-mod"><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp-extended@2021-02-07.yang"
module ietf-rsvp-extended {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp-extended";
  prefix rsvp-extended;

  import ietf-rsvp {
    prefix rsvp;
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the Extended RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2021-02-07 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  grouping graceful-restart-extended {
    description
      "Configuration parameters relating to RSVP Graceful-Restart.";
    leaf restart-time {
      type uint32;
      units "seconds";
      default "120";
      description
        "Graceful restart time (seconds).";
      reference
        "RFC3473, RFC5495";
    }
    leaf recovery-time {
      type uint32;
      units "seconds";
      default "120";
      description
        "RSVP state recovery time.";
      reference
        "RFC3473, RFC5495";
    }
  }

  grouping authentication-extended {
    description
      "Configuration parameters relating to RSVP authentication.";
    leaf lifetime {
      type uint32 {
        range "30..86400";
      }
      units "seconds";
      default "30";
      description
        "Life time for each security association.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf window-size {
      type uint32 {
        range "1..64";
      }
      default "2";
      description
        "Window-size to limit number of out-of-order messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf challenge {
      type empty;
      description
        "Enable challenge messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf retransmits {
      type uint32 {
        range "1..10000";
      }
      default "1";
      description
        "Number of retransmits when messages are dropped.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf key-chain {
      type key-chain:key-chain-ref;
      description
        "Key chain name to authenticate RSVP
         signaling messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
  }

  grouping hellos-extended {
    description
      "Configuration parameters relating to RSVP hellos";
    leaf interface-based {
      type empty;
      description
        "Enable interface-based Hello adjacency if present.";
    }
    leaf hello-interval {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure interval between successive Hello messages in
         milliseconds.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
    leaf hello-misses {
      type uint32 {
        range "1..10";
      }
      default "3";
      description
        "Configure max number of consecutive missed Hello messages.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic- Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
  }

  grouping signaling-parameters-extended {
    description
      "Configuration parameters relating to RSVP signaling";
    leaf refresh-interval {
      type uint32;
      units "seconds";
      default "30";
      description
        "Set interval between successive refreshes";
      reference "RFC2205";
    }
    leaf refresh-misses {
      type uint32;
      default "9";
      description
        "Set max number of consecutive missed messages for state
         expiry";
      reference "RFC2205";
    }
    leaf checksum_enabled {
      type boolean;
      default "false";
      description
        "Enable RSVP message checksum computation";
      reference "RFC2205";
    }
    leaf patherr-state-removal {
      type empty;
      description
        "State-Removal flag in Path Error message if present.";
      reference "RFC3473";
    }
  }

  grouping refresh-reduction-extended {
    description
      "Configuration parameters relating to RSVP refresh reduction.";
    leaf bundle-message-max-size {
      type uint32 {
        range "512..65000";
      }
      default "1500";
      description
        "Configure maximum size (bytes) of a single RSVP Bundle
         message.";
      reference "RFC2961";
    }
    leaf reliable-ack-hold-time {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure hold time in milliseconds for sending RSVP ACK
         message(s).";
      reference "RFC2961";
    }
    leaf reliable-ack-max-size {
      type uint32;
      default "1500";
      description
        "Configure max size of a single RSVP ACK message.";
      reference "RFC2961";
    }
    leaf reliable-retransmit-time {
      type uint32;
      units "milliseconds";
      default "50";
      description
        "Configure min delay in milliseconds to wait for an ACK
         before a retransmit.";
      reference "RFC2961";
    }
    leaf reliable-srefresh {
      type empty;
      description
        "Configure use of reliable messaging for summary refresh if
         present.";
      reference "RFC2961";
    }
    leaf summary-max-size {
      type uint32 {
        range "20..65000";
      }
      default "1500";
      description
        "Configure max size (bytes) of a single RSVP summary refresh
         message.";
      reference "RFC2961";
    }
  }

  grouping packets-extended-statistics {
    description
      "Packet statistics.";
    leaf discontinuity-time {
      type yang:date-and-time;
      description
        "The time on the most recent occasion at which any one or
         more of the statistic counters suffered a discontinuity.
         If no such discontinuities have occurred since the last
         re-initialization of the local management subsystem, then
         this node contains the time the local management subsystem
         re-initialized itself.";
    }
    leaf out-dropped {
      type yang:counter64;
      description
        "Out RSVP packet drop count.";
    }
    leaf in-dropped {
      type yang:counter64;
      description
        "In RSVP packet drop count.";
    }
    leaf out-errors {
      type yang:counter64;
      description
        "Out RSVP packet errors count.";
    }
    leaf in-errors {
      type yang:counter64;
      description
        "In RSVP packet rx errors count.";
    }
  }

  /**
   * RSVP extensions augmentations
   */
  /* RSVP graceful restart*/

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/"
        + "rsvp:graceful-restart" {
    description
      "RSVP graceful restart configuration extensions";
    uses graceful-restart-extended;
  }


  /**
   * RSVP all interfaces extensions
   */

  /* RSVP interface signaling extensions */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces" {
    description
      "RSVP signaling all interfaces configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:statistics/rsvp:packets" {
    description
      "RSVP packets all interfaces configuration extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction all interface configuration
       extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:hellos" {
    description
      "RSVP hello all interfaces configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:authentication" {
    description
      "RSVP authentication all interfaces configuration extensions";
    uses authentication-extended;
  }

  /**
   * RSVP per interface extensions
   */
  /* RSVP interface signaling extensions */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface" {
    description
      "RSVP signaling interface configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:statistics/rsvp:packets" {
    description
      "RSVP packet stats extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction interface configuration extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:hellos" {
    description
      "RSVP hello interface configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:authentication" {
    description
      "RSVP authentication interface configuration extensions";
    uses authentication-extended;
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document registers the following URIs in the IETF XML registry
<xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>, the following registration
is requested to be made.</t>

<figure><artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers two YANG modules in the YANG Module Names
registry <xref target="RFC6020"/>.</t>

<figure><artwork><![CDATA[
   name:       ietf-rsvp
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp
   prefix:     rsvp
   reference:  RFCXXXX

   name:       ietf-rsvp-extended
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   prefix:     rsvp-extended
   reference:  RFCXXXX
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The YANG module specified in this document defines a schema for data that is
designed to be accessed via network management protocols such as NETCONF
<xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure
transport layer, and the mandatory-to-implement secure transport is Secure
Shell (SSH) <xref target="RFC6242"/>.  The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/> provides the
means to restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol operations
and content.</t>

<t>There are a number of data nodes defined in the YANG module(s) defined in this
document that are writable/creatable/deletable (i.e., config true, which is the
default).  These data nodes may be considered sensitive or vulnerable in some
network environments.  Write operations (e.g., &lt;edit-config&gt;) to these data
nodes without proper protection can have a negative effect on network
operations. These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<t><list style='empty'>
  <t>All of which are considered sensitive and if access to either of these is
compromised, it can result in temporary network outages or be employed to
mount DoS attacks.</t>
</list></t>

<t>Some of the readable data nodes in this YANG module may be considered sensitive
or vulnerable in some network environments. It is thus important to control
read access (e.g., via get, get-config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<t><list style='empty'>
  <t>Additional information from these state data nodes can be inferred with respect
to the network topology, and device location and subsequently be used to mount
other attacks in the network.</t>
</list></t>

<t>For RSVP authentication, the configuration supported is via the specification of
key-chains <xref target="RFC8177"/> or the direct specification of key and authentication
algorithm, and hence security considerations of <xref target="RFC8177"/> are inherited.  This
includes the considerations with respect to the local storage and handling of
authentication keys.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
sensitive or vulnerable in some network environments.  It is thus
important to control access to these operations.  The RSVP YANG
module support the “clear-session” and “clear-neighbor” RPCs.  If
access to either of these is compromised, they can result in
temporary network outages be employed to mount DoS attacks.</t>

<t>The security considerations spelled out in the YANG 1.1 specification
<xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="acknowledgement" title="Acknowledgement">

<t>The authors would like to thank Tom Petch for reviewing and providing useful
feedback about the document. The authors would also like to thank Lou Berger
for reviewing and providing valuable feedback on this document.</t>

</section>
<section anchor="appendix-a" title="Appendix A">

<t>A simple network setup is shown in {fig-example title}.  R1 runs the RSVP routing
protocol on both interfaces ‘ge0/0/0/1’, and ‘ge0/0/0/2’.</t>

<figure title="Example of network configuration." anchor="fig-example"><artwork><![CDATA[
State on R1:

Sessions:
=========
Destination         Protocol-ID Dest-port 
198.51.100.1        10          10 

Neighbors:
==========
Neighbor Address    Interface
192.0.2.6           ge0/0/0/1

                               192.0.2.5/30
                              ge0/0/0/1
                              +---
                             /
                        +-----+
                        | R1  |
                        +-----+
                             \
                              +---
                              ge0/0/0/2
                               192.0.2.13/30

]]></artwork></figure>

<t>The instance data tree could then be as follows:</t>

<figure title="Example RSVP JSON encoded data instance tree." anchor="fig-instance-tree"><artwork><![CDATA[
{
  "ietf-routing:routing": {
    "control-plane-protocols": {
      "control-plane-protocol": [
        {
          "type": "rt:routing-protocol",
          "name": "rsvp:rsvp",
          "ietf-rsvp:rsvp": {
            "interfaces": {
              "refresh-reduction": {
                "enabled": true,
                "ietf-rsvp-extended:bundle-message-max-size": 2000,
                "ietf-rsvp-extended:reliable-ack-hold-time": 180,
                "ietf-rsvp-extended:reliable-ack-max-size": 2000,
                "ietf-rsvp-extended:reliable-retransmit-time": 180,
                "ietf-rsvp-extended:reliable-srefresh": [
                  null
                ],
                "ietf-rsvp-extended:summary-max-size": 2000
              },
              "hellos": {
                "enabled": true,
                "ietf-rsvp-extended:interface-based": [
                  null
                ],
                "ietf-rsvp-extended:hello-interval": 27000,
                "ietf-rsvp-extended:hello-misses": 3
              },
              "statistics": {
                "messages": {
                  "ack-sent": "777",
                  "ack-received": "4840",
                  "bundle-sent": "2195",
                  "bundle-received": "293",
                  "hello-sent": "2516",
                  "hello-received": "3535",
                  "integrity-challenge-sent": "2737",
                  "integrity-challenge-received": "2330",
                  "integrity-response-sent": "895",
                  "integrity-response-received": "1029",
                  "path-sent": "1197",
                  "path-received": "3568",
                  "path-err-sent": "4658",
                  "path-err-received": "695",
                  "path-tear-sent": "3706",
                  "path-tear-received": "2604",
                  "resv-sent": "3353",
                  "resv-received": "3129",
                  "resv-err-sent": "1787",
                  "resv-err-received": "3205",
                  "resv-tear-sent": "4465",
                  "resv-tear-received": "3056",
                  "summary-refresh-sent": "655",
                  "summary-refresh-received": "3856"
                },
                "packets": {
                  "sent": "2147",
                  "received": "4374",
                  "ietf-rsvp-extended:discontinuity-time":
                  "2015-10-24T17:11:27+02:00",
                  "ietf-rsvp-extended:out-dropped": "2696",
                  "ietf-rsvp-extended:in-dropped": "941",
                  "ietf-rsvp-extended:out-errors": "19",
                  "ietf-rsvp-extended:in-errors": "2732"
                },
                "errors": {
                  "authenticate": "2540",
                  "checksum": "2566",
                  "packet-length": "267"
                }
              },
              "interface": [
                {
                  "interface": "ge0/0/0/1",
                  "statistics": {
                    "messages": {
                      "ack-sent": "2747",
                      "ack-received": "4934",
                      "bundle-sent": "1618",
                      "bundle-received": "3668",
                      "hello-sent": "4288",
                      "hello-received": "1194",
                      "integrity-challenge-sent": "4850",
                      "integrity-challenge-received": "3979",
                      "integrity-response-sent": "479",
                      "integrity-response-received": "1773",
                      "path-sent": "2230",
                      "path-received": "1793",
                      "path-err-sent": "465",
                      "path-err-received": "1859",
                      "path-tear-sent": "923",
                      "path-tear-received": "3924",
                      "resv-sent": "3203",
                      "resv-received": "2507",
                      "resv-err-sent": "1259",
                      "resv-err-received": "2445",
                      "resv-tear-sent": "3045",
                      "resv-tear-received": "4676",
                      "summary-refresh-sent": "365",
                      "summary-refresh-received": "2129"
                    },
                    "packets": {
                      "sent": "847",
                      "received": "3114",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "1841",
                      "ietf-rsvp-extended:in-dropped": "4832",
                      "ietf-rsvp-extended:out-errors": "1334",
                      "ietf-rsvp-extended:in-errors": "3900"
                    },
                    "errors": {
                      "authenticate": "3494",
                      "checksum": "4374",
                      "packet-length": "2456"
                    }
                  }
                },
                {
                  "interface": "ge0/0/0/2",
                  "statistics": {
                    "messages": {
                      "ack-sent": "1276",
                      "ack-received": "2427",
                      "bundle-sent": "4053",
                      "bundle-received": "3509",
                      "hello-sent": "3261",
                      "hello-received": "2863",
                      "integrity-challenge-sent": "4744",
                      "integrity-challenge-received": "3554",
                      "integrity-response-sent": "3155",
                      "integrity-response-received": "169",
                      "path-sent": "3853",
                      "path-received": "409",
                      "path-err-sent": "4227",
                      "path-err-received": "2830",
                      "path-tear-sent": "1742",
                      "path-tear-received": "3344",
                      "resv-sent": "3154",
                      "resv-received": "3492",
                      "resv-err-sent": "3112",
                      "resv-err-received": "3974",
                      "resv-tear-sent": "3657",
                      "resv-tear-received": "533",
                      "summary-refresh-sent": "4036",
                      "summary-refresh-received": "2123"
                    },
                    "packets": {
                      "sent": "473",
                      "received": "314",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "2042",
                      "ietf-rsvp-extended:in-dropped": "90",
                      "ietf-rsvp-extended:out-errors": "1210",
                      "ietf-rsvp-extended:in-errors": "1361"
                    },
                    "errors": {
                      "authenticate": "543",
                      "checksum": "2241",
                      "packet-length": "480"
                    }
                  }
                }
              ],
              "ietf-rsvp-extended:refresh-interval": 30,
              "ietf-rsvp-extended:refresh-misses": 5,
              "ietf-rsvp-extended:checksum_enabled": true,
              "ietf-rsvp-extended:patherr-state-removal": [
                null
              ]
            },
            "sessions": {
              "session-ip": [
                {
                  "destination-port": 10,
                  "protocol-id": 10,
                  "destination": "198.51.100.1",
                  "psbs": {
                    "psb": [
                      {
                        "source-port": 10,
                        "expires-in": 100
                      }
                    ]
                  },
                  "rsbs": {
                    "rsb": [
                      {
                        "source-port": 10,
                        "reservation-style":
                        "rsvp:reservation-wildcard-filter",
                        "expires-in": 100
                      }
                    ]
                  }
                }
              ]
            },
            "neighbors": {
              "neighbor": [
                {
                  "address": "192.0.2.6",
                  "epoch": 130,
                  "expiry-time": 260,
                  "graceful-restart": {
                    "enabled": true,
                    "local-restart-time": 271,
                    "local-recovery-time": 138,
                    "neighbor-restart-time": 341,
                    "neighbor-recovery-time": 342
                  },
                  "hello-status": "enabled",
                  "interface": "ge0/0/0/1",
                  "restart-count": 2,
                  "restart-time": "2015-10-24T17:11:27+02:00"
                }
              ]
            },
            "graceful-restart": {
              "enabled": true,
              "local-restart-time": 60,
              "local-recovery-time": 180,
              "neighbor-restart-time": 80,
              "neighbor-recovery-time": 200,
              "helper-mode": {
                "enabled": true
              }
            }
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="contributors" title="Contributors">

<figure><artwork><![CDATA[

   Himanshu Shah
   Ciena

   Email: hshah@ciena.com


   Xia Chen
   Huawei Technologies

   Email: jescia.chenxia@huawei.com


   Raqib Jones
   Brocade

   Email: raqib@Brocade.com


   Bin Wen
   Comcast

   Email: Bin_Wen@cable.comcast.com

]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC6020" target='https://www.rfc-editor.org/info/rfc6020'>
<front>
<title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund' role='editor'><organization /></author>
<date year='2010' month='October' />
<abstract><t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6020'/>
<seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>



<reference  anchor="RFC6241" target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author initials='R.' surname='Enns' fullname='R. Enns' role='editor'><organization /></author>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund' role='editor'><organization /></author>
<author initials='J.' surname='Schoenwaelder' fullname='J. Schoenwaelder' role='editor'><organization /></author>
<author initials='A.' surname='Bierman' fullname='A. Bierman' role='editor'><organization /></author>
<date year='2011' month='June' />
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference  anchor="RFC6991" target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author initials='J.' surname='Schoenwaelder' fullname='J. Schoenwaelder' role='editor'><organization /></author>
<date year='2013' month='July' />
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference  anchor="RFC7950" target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund' role='editor'><organization /></author>
<date year='2016' month='August' />
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference  anchor="RFC8040" target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author initials='A.' surname='Bierman' fullname='A. Bierman'><organization /></author>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund'><organization /></author>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference  anchor="RFC8343" target='https://www.rfc-editor.org/info/rfc8343'>
<front>
<title>A YANG Data Model for Interface Management</title>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund'><organization /></author>
<date year='2018' month='March' />
<abstract><t>This document defines a YANG data model for the management of network interfaces.  It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t><t>The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t><t>This document obsoletes RFC 7223.</t></abstract>
</front>
<seriesInfo name='RFC' value='8343'/>
<seriesInfo name='DOI' value='10.17487/RFC8343'/>
</reference>



<reference  anchor="RFC8349" target='https://www.rfc-editor.org/info/rfc8349'>
<front>
<title>A YANG Data Model for Routing Management (NMDA Version)</title>
<author initials='L.' surname='Lhotka' fullname='L. Lhotka'><organization /></author>
<author initials='A.' surname='Lindem' fullname='A. Lindem'><organization /></author>
<author initials='Y.' surname='Qu' fullname='Y. Qu'><organization /></author>
<date year='2018' month='March' />
<abstract><t>This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem.  It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions.  The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t><t>The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA).  This document obsoletes RFC 8022.</t></abstract>
</front>
<seriesInfo name='RFC' value='8349'/>
<seriesInfo name='DOI' value='10.17487/RFC8349'/>
</reference>



<reference  anchor="RFC8294" target='https://www.rfc-editor.org/info/rfc8294'>
<front>
<title>Common YANG Data Types for the Routing Area</title>
<author initials='X.' surname='Liu' fullname='X. Liu'><organization /></author>
<author initials='Y.' surname='Qu' fullname='Y. Qu'><organization /></author>
<author initials='A.' surname='Lindem' fullname='A. Lindem'><organization /></author>
<author initials='C.' surname='Hopps' fullname='C. Hopps'><organization /></author>
<author initials='L.' surname='Berger' fullname='L. Berger'><organization /></author>
<date year='2017' month='December' />
<abstract><t>This document defines a collection of common data types using the YANG data modeling language.  These derived common types are designed to be imported by other modules defined in the routing area.</t></abstract>
</front>
<seriesInfo name='RFC' value='8294'/>
<seriesInfo name='DOI' value='10.17487/RFC8294'/>
</reference>



<reference  anchor="RFC8177" target='https://www.rfc-editor.org/info/rfc8177'>
<front>
<title>YANG Data Model for Key Chains</title>
<author initials='A.' surname='Lindem' fullname='A. Lindem' role='editor'><organization /></author>
<author initials='Y.' surname='Qu' fullname='Y. Qu'><organization /></author>
<author initials='D.' surname='Yeung' fullname='D. Yeung'><organization /></author>
<author initials='I.' surname='Chen' fullname='I. Chen'><organization /></author>
<author initials='J.' surname='Zhang' fullname='J. Zhang'><organization /></author>
<date year='2017' month='June' />
<abstract><t>This document describes the key chain YANG data model.  Key chains are commonly used for routing protocol authentication and other applications requiring symmetric keys.  A key chain is a list containing one or more elements containing a Key ID, key string, send/accept lifetimes, and the associated authentication or encryption algorithm.  By properly overlapping the send and accept lifetimes of multiple key chain elements, key strings and algorithms may be gracefully updated.  By representing them in a YANG data model, key distribution can be automated.</t></abstract>
</front>
<seriesInfo name='RFC' value='8177'/>
<seriesInfo name='DOI' value='10.17487/RFC8177'/>
</reference>



<reference  anchor="RFC8340" target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund'><organization /></author>
<author initials='L.' surname='Berger' fullname='L. Berger' role='editor'><organization /></author>
<date year='2018' month='March' />
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference  anchor="RFC8639" target='https://www.rfc-editor.org/info/rfc8639'>
<front>
<title>Subscription to YANG Notifications</title>
<author initials='E.' surname='Voit' fullname='E. Voit'><organization /></author>
<author initials='A.' surname='Clemm' fullname='A. Clemm'><organization /></author>
<author initials='A.' surname='Gonzalez Prieto' fullname='A. Gonzalez Prieto'><organization /></author>
<author initials='E.' surname='Nilsen-Nygaard' fullname='E. Nilsen-Nygaard'><organization /></author>
<author initials='A.' surname='Tripathy' fullname='A. Tripathy'><organization /></author>
<date year='2019' month='September' />
<abstract><t>This document defines a YANG data model and associated mechanisms enabling subscriber-specific subscriptions to a publisher's event streams.  Applying these elements allows a subscriber to request and receive a continuous, customized feed of publisher-generated information.</t></abstract>
</front>
<seriesInfo name='RFC' value='8639'/>
<seriesInfo name='DOI' value='10.17487/RFC8639'/>
</reference>



<reference  anchor="RFC8641" target='https://www.rfc-editor.org/info/rfc8641'>
<front>
<title>Subscription to YANG Notifications for Datastore Updates</title>
<author initials='A.' surname='Clemm' fullname='A. Clemm'><organization /></author>
<author initials='E.' surname='Voit' fullname='E. Voit'><organization /></author>
<date year='2019' month='September' />
<abstract><t>This document describes a mechanism that allows subscriber applications to request a continuous and customized stream of updates from a YANG datastore.  Providing such visibility into updates enables new capabilities based on the remote mirroring and monitoring of configuration and operational state.</t></abstract>
</front>
<seriesInfo name='RFC' value='8641'/>
<seriesInfo name='DOI' value='10.17487/RFC8641'/>
</reference>



<reference  anchor="RFC8341" target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author initials='A.' surname='Bierman' fullname='A. Bierman'><organization /></author>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund'><organization /></author>
<date year='2018' month='March' />
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference  anchor="RFC3688" target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author initials='M.' surname='Mealling' fullname='M. Mealling'><organization /></author>
<date year='2004' month='January' />
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>



<reference  anchor="RFC6242" target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author initials='M.' surname='Wasserman' fullname='M. Wasserman'><organization /></author>
<date year='2011' month='June' />
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC2205" target='https://www.rfc-editor.org/info/rfc2205'>
<front>
<title>Resource ReSerVation Protocol (RSVP) -- Version 1 Functional Specification</title>
<author initials='R.' surname='Braden' fullname='R. Braden' role='editor'><organization /></author>
<author initials='L.' surname='Zhang' fullname='L. Zhang'><organization /></author>
<author initials='S.' surname='Berson' fullname='S. Berson'><organization /></author>
<author initials='S.' surname='Herzog' fullname='S. Herzog'><organization /></author>
<author initials='S.' surname='Jamin' fullname='S. Jamin'><organization /></author>
<date year='1997' month='September' />
<abstract><t>This memo describes version 1 of RSVP, a resource reservation setup protocol designed for an integrated services Internet.  RSVP provides receiver-initiated setup of resource reservations for multicast or unicast data flows, with good scaling and robustness properties. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2205'/>
<seriesInfo name='DOI' value='10.17487/RFC2205'/>
</reference>



<reference  anchor="RFC3209" target='https://www.rfc-editor.org/info/rfc3209'>
<front>
<title>RSVP-TE: Extensions to RSVP for LSP Tunnels</title>
<author initials='D.' surname='Awduche' fullname='D. Awduche'><organization /></author>
<author initials='L.' surname='Berger' fullname='L. Berger'><organization /></author>
<author initials='D.' surname='Gan' fullname='D. Gan'><organization /></author>
<author initials='T.' surname='Li' fullname='T. Li'><organization /></author>
<author initials='V.' surname='Srinivasan' fullname='V. Srinivasan'><organization /></author>
<author initials='G.' surname='Swallow' fullname='G. Swallow'><organization /></author>
<date year='2001' month='December' />
<abstract><t>This document describes the use of RSVP (Resource Reservation Protocol), including all the necessary extensions, to establish label-switched paths (LSPs) in MPLS (Multi-Protocol Label Switching).  Since the flow along an LSP is completely identified by the label applied at the ingress node of the path, these paths may be treated as tunnels.  A key application of LSP tunnels is traffic engineering with MPLS as specified in RFC 2702.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3209'/>
<seriesInfo name='DOI' value='10.17487/RFC3209'/>
</reference>



<reference  anchor="RFC2747" target='https://www.rfc-editor.org/info/rfc2747'>
<front>
<title>RSVP Cryptographic Authentication</title>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='B.' surname='Lindell' fullname='B. Lindell'><organization /></author>
<author initials='M.' surname='Talwar' fullname='M. Talwar'><organization /></author>
<date year='2000' month='January' />
<abstract><t>This document describes the format and use of RSVP's INTEGRITY object to provide hop-by-hop integrity and authentication of RSVP messages. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2747'/>
<seriesInfo name='DOI' value='10.17487/RFC2747'/>
</reference>



<reference  anchor="RFC2961" target='https://www.rfc-editor.org/info/rfc2961'>
<front>
<title>RSVP Refresh Overhead Reduction Extensions</title>
<author initials='L.' surname='Berger' fullname='L. Berger'><organization /></author>
<author initials='D.' surname='Gan' fullname='D. Gan'><organization /></author>
<author initials='G.' surname='Swallow' fullname='G. Swallow'><organization /></author>
<author initials='P.' surname='Pan' fullname='P. Pan'><organization /></author>
<author initials='F.' surname='Tommasi' fullname='F. Tommasi'><organization /></author>
<author initials='S.' surname='Molendini' fullname='S. Molendini'><organization /></author>
<date year='2001' month='April' />
<abstract><t>This document describes a number of mechanisms that can be used to reduce processing overhead requirements of refresh messages, eliminate the state synchronization latency incurred when an RSVP (Resource ReserVation Protocol) message is lost and, when desired, refreshing state without the transmission of whole refresh messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2961'/>
<seriesInfo name='DOI' value='10.17487/RFC2961'/>
</reference>



<reference  anchor="RFC3473" target='https://www.rfc-editor.org/info/rfc3473'>
<front>
<title>Generalized Multi-Protocol Label Switching (GMPLS) Signaling Resource ReserVation Protocol-Traffic Engineering (RSVP-TE) Extensions</title>
<author initials='L.' surname='Berger' fullname='L. Berger' role='editor'><organization /></author>
<date year='2003' month='January' />
<abstract><t>This document describes extensions to Multi-Protocol Label Switching (MPLS) Resource ReserVation Protocol - Traffic Engineering (RSVP-TE) signaling required to support Generalized MPLS.  Generalized MPLS extends the MPLS control plane to encompass time-division (e.g., Synchronous Optical Network and Synchronous Digital Hierarchy, SONET/SDH), wavelength (optical lambdas) and spatial switching (e.g., incoming port or fiber to outgoing port or fiber).  This document presents a RSVP-TE specific description of the extensions.  A generic functional description can be found in separate documents.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3473'/>
<seriesInfo name='DOI' value='10.17487/RFC3473'/>
</reference>



<reference  anchor="RFC5063" target='https://www.rfc-editor.org/info/rfc5063'>
<front>
<title>Extensions to GMPLS Resource Reservation Protocol (RSVP) Graceful Restart</title>
<author initials='A.' surname='Satyanarayana' fullname='A. Satyanarayana' role='editor'><organization /></author>
<author initials='R.' surname='Rahman' fullname='R. Rahman' role='editor'><organization /></author>
<date year='2007' month='October' />
<abstract><t>This document describes extensions to the Resource Reservation Protocol (RSVP) Graceful Restart mechanisms defined in RFC 3473.  The extensions enable the recovery of RSVP signaling state based on the Path message last sent by the node being restarted.</t><t>Previously defined Graceful Restart mechanisms, also called recovery from nodal faults, permit recovery of signaling state from adjacent nodes when the data plane has retained the associated forwarding state across a restart.  Those mechanisms do not fully support signaling state recovery on ingress nodes or recovery of all RSVP objects.</t><t>The extensions defined in this document build on the RSVP Hello extensions defined in RFC 3209, and extensions for state recovery on nodal faults defined in RFC 3473.  Using these extensions, the restarting node can recover all previously transmitted Path state, including the Explicit Route Object and the downstream (outgoing) interface identifiers.  The extensions can also be used to recover signaling state after the restart of an ingress node.</t><t>These extensions are not used to create or restore data plane state.</t><t>The extensions optionally support the use of Summary Refresh, defined in RFC 2961, to reduce the number of messages exchanged during the Recovery Phase when the restarting node has recovered signaling state locally for one or more Label Switched Paths (LSPs).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5063'/>
<seriesInfo name='DOI' value='10.17487/RFC5063'/>
</reference>



<reference  anchor="RFC5495" target='https://www.rfc-editor.org/info/rfc5495'>
<front>
<title>Description of the Resource Reservation Protocol - Traffic-Engineered (RSVP-TE) Graceful Restart Procedures</title>
<author initials='D.' surname='Li' fullname='D. Li'><organization /></author>
<author initials='J.' surname='Gao' fullname='J. Gao'><organization /></author>
<author initials='A.' surname='Satyanarayana' fullname='A. Satyanarayana'><organization /></author>
<author initials='S.' surname='Bardalai' fullname='S. Bardalai'><organization /></author>
<date year='2009' month='March' />
<abstract><t>The Hello message for the Resource Reservation Protocol (RSVP) has been defined to establish and maintain basic signaling node adjacencies for Label Switching Routers (LSRs) participating in a Multiprotocol Label Switching (MPLS) traffic-engineered (TE) network.  The Hello message has been extended for use in Generalized MPLS (GMPLS) networks for state recovery of control channel or nodal faults.</t><t>The GMPLS protocol definitions for RSVP also allow a restarting node to learn which label it previously allocated for use on a Label Switched Path (LSP).</t><t>Further RSVP protocol extensions have been defined to enable a restarting node to recover full control plane state by exchanging RSVP messages with its upstream and downstream neighbors.</t><t>This document provides an informational clarification of the control plane procedures for a GMPLS network when there are multiple node failures, and describes how full control plane state can be recovered in different scenarios where the order in which the nodes restart is different.</t><t>This document does not define any new processes or procedures.  All protocol mechanisms are already defined in the referenced documents. This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='5495'/>
<seriesInfo name='DOI' value='10.17487/RFC5495'/>
</reference>



<reference  anchor="rfc4558" target='https://www.rfc-editor.org/info/rfc4558'>
<front>
<title>Node-ID Based Resource Reservation Protocol (RSVP) Hello: A Clarification Statement</title>
<author initials='Z.' surname='Ali' fullname='Z. Ali'><organization /></author>
<author initials='R.' surname='Rahman' fullname='R. Rahman'><organization /></author>
<author initials='D.' surname='Prairie' fullname='D. Prairie'><organization /></author>
<author initials='D.' surname='Papadimitriou' fullname='D. Papadimitriou'><organization /></author>
<date year='2006' month='June' />
<abstract><t>Use of Node-ID based Resource Reservation Protocol (RSVP) Hello messages is implied in a number of cases, e.g., when data and control planes are separated, when TE links are unnumbered.  Furthermore, when link level failure detection is performed by some means other than exchanging RSVP Hello messages, use of a Node-ID based Hello session is optimal for detecting signaling adjacency failure for Resource reSerVation Protocol-Traffic Engineering (RSVP-TE).  Nonetheless, this implied behavior is unclear, and this document formalizes use of the Node-ID based RSVP Hello session in some scenarios.  The procedure described in this document applies to both Multi-Protocol Label Switching (MPLS) and Generalized MPLS (GMPLS) capable nodes.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4558'/>
<seriesInfo name='DOI' value='10.17487/RFC4558'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
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
7FkVs4+g9TbNymg3UnU0Qrlw3GaTCflhypkg07hbJdfQAbPyM8xl2J1mgPDs
+hkFpajSyXzuq9HA7LzqXoEzNHrm+lLpOM+gG0aCaIP/KzJC5MPiIA3Ophjb
q3JMW/LFHebaSxkvhomlbQslhFAYKULsLbatQ4f8c/G9RxINzDFvgomkY7tQ
VsFaPxpwOp+zFHMkinQD/FeqjzHgzWM3+U+m+BhaXODAmec9gtGGZE0I+hSd
ebbCwMI50VGzufhj2TqO7WmbkfYvlzM1z1rr15oJs5qCBV2KdCdIWpvIYA3F
l8SJS/qsej+r3l9X9eJQtdRv7zesf3U06ToUsR14XD+IYPTHN8jwebDRzp+H
mO5GTfyunCT75wuf21VXlI9iiTX1eHmzjDVBTexN9vAgg1cpl3OWLii25Egc
XkDAG+dHz2UuIygpEZxkV4ziScUhns+q+rOqjn8Tqvr3YyWL0Zbo0baypu76
lyOfcKXSe37F15eN8jlac5e169ti53xLqK+m6rsXN46cnL06/8a8iCT6gmNA
4f8jNlJ3z7AJv2mGvjL5VV6swtfMDd1H5yPFV57UnXqfTNSiN46FiI7nIG0u
5d0t70S517xYSTelfPFFfIHX4rzi1+JE0adP6hodicv9fVyO81uOA2FNN+kU
jK/SV2JXEaaK1LoQAoQvEgdpMLk3T0dHi/I3lO4CsHqm7kdRrT0zc64Prbtc
xO0sw9itFelNl3ba1+J1m2mb/3U9yS8TpzZ9qS1JqrvTfNevGTfbyRKhKwd/
5W7p3S3+W+yG6t7lPP0gTPCzBUaTyg54bpXTVaAf3VGRz+fWlYie+zjl1due
0uHiCJ1vNbYqDtDd0m7x3xgjZODE8LeHGqfmL4aY3gWzxxzf3KWvN8lEMdcz
9nhJNB+YKQROSefqWfmYNzfyomgJUhAaKsAu3avAcZC3pP3CpPGwzdn+Nskn
Dl7I7X5M3Flm/wpqL36IrosHVcb5ZGRcNNlc2ILbVLhgVZHMymlW+W5lrRUu
RdcMPunL6XhZGXBVQ8DG4tfnEQ9DMBmjjSG0BEamSNm3o1qC79CKl7FE/jfU
bdtnNLsv3bmQwNxms1F+q1jqGcLiEMefvGKhxaz0Vlc55nh1nXJO/SVujf31
aag+ftaKDyLbZyX5e1GSNZb9m+rMGhV+7yo0dLmr8pDNC17rbnP9qte4dtkr
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
JKMSfP0HfP02RRZhJSzAK/PO/38uT+RhrTwBAA==

-->

</rfc>

